plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id("org.asciidoctor.jvm.convert") version "3.1.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'com.h2database:h2:2.1.214'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}


tasks.named('test') {
	outputs.dir snippetsDir // (3)  test의 출력 디렉토리를 Snippets 디렉토리로 설정합니다.
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir // (4) 입력 디렉토리를 Snippets 디렉토리로 설정합니다.
	dependsOn test // (5) 해당 작업은 test → asciidoctor 순으로 실행됩니다.
}

test {
	outputs.dir snippetsDir // (3)
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir // (4)
	dependsOn test // (5)
}

bootJar {
	dependsOn asciidoctor // (6) 해당 작업은 asciidoctor → bootJar 순으로 실행됩니다.
	copy { // (7) asciidoctor가 생성해준 build/docs/asciidoc에 있는 HTML 파일이 src/main/resources/static/docs 디렉토리에 생성됩니다. static 아래에 있는 파일들은 톰캣이 자동으로 호스팅을 해주기 때문에 http://localhost:8080/docs/index.html 로 접근할 수 있습니다.
		from "${asciidoctor.outputDir}"
		into 'static/docs'
	}
}